<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Addons on Harvester manual test cases</title>
    <link>https://harvester.github.io/tests/manual/advanced/addons/</link>
    <description>Recent content in Addons on Harvester manual test cases</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://harvester.github.io/tests/manual/advanced/addons/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Enable Harvester addons and check deployment state</title>
      <link>https://harvester.github.io/tests/manual/advanced/addons/5337-enable-addons-check-deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://harvester.github.io/tests/manual/advanced/addons/5337-enable-addons-check-deployment/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Related issues: &lt;a href=&#34;https://github.com/harvester/harvester/issues/5337&#34;&gt;#5337&lt;/a&gt; [BUG] Failed to enable vm-importer, pcidevices and harvester-seeder controller addons, keep stuck in &amp;ldquo;Enabling&amp;rdquo; state&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;category&#34;&gt;Category:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Addons&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;verification-steps&#34;&gt;Verification Steps&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Prepare three nodes Harvester cluster&lt;/li&gt;&#xA;&lt;li&gt;Open Advanced -&amp;gt; &lt;code&gt;Addons&lt;/code&gt; page&lt;/li&gt;&#xA;&lt;li&gt;Access to harvester node machine&lt;/li&gt;&#xA;&lt;li&gt;Switch to root user and open k9s&lt;/li&gt;&#xA;&lt;li&gt;Enable the &lt;code&gt;vm-importer&lt;/code&gt;, &lt;code&gt;pci-devices&lt;/code&gt; and &lt;code&gt;harvester-seeder&lt;/code&gt; addons&lt;/li&gt;&#xA;&lt;li&gt;Check the corresponding jobs and logs&lt;/li&gt;&#xA;&lt;li&gt;Enable rest of the addons &lt;code&gt;nvidia-driver-toolkit&lt;/code&gt;, &lt;code&gt;rancher-monitoring&lt;/code&gt; and &lt;code&gt;rancher-logging&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;expected-results&#34;&gt;Expected Results&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Check the &lt;code&gt;vm-importer&lt;/code&gt;, &lt;code&gt;pci-devices&lt;/code&gt; and &lt;code&gt;harvester-seeder&lt;/code&gt; display in &lt;code&gt;Deployment Successful&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Check the &lt;code&gt;vm-importer-controller&lt;/code&gt;, &lt;code&gt;pci-devices-controller&lt;/code&gt; and &lt;code&gt;harvester-seeder&lt;/code&gt; jobs and the related helm-install chart job all running well on the K9s&lt;/li&gt;&#xA;&lt;li&gt;Check the &lt;code&gt;nvidia-driver-toolkit&lt;/code&gt;, &lt;code&gt;rancher-monitoring&lt;/code&gt; and &lt;code&gt;rancher-logging&lt;/code&gt; display in &lt;code&gt;Deployment Successful&lt;/code&gt;&#xA;&#xA;&#xA;&lt;img src=&#34;https://harvester.github.io/tests/images/addons/5337-enable-all-addons.png&#34; alt=&#34;images/addons/5337-enable-all-addons.png&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;Check the &lt;code&gt;nvidia-driver-toolkit&lt;/code&gt;, &lt;code&gt;rancher-monitoring&lt;/code&gt; and &lt;code&gt;rancher-logging&lt;/code&gt; jobs and the related helm-install chart job all running well on the K9s&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>PCI Devices Controller</title>
      <link>https://harvester.github.io/tests/manual/advanced/addons/pci-devices-controller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://harvester.github.io/tests/manual/advanced/addons/pci-devices-controller/</guid>
      <description>&lt;h2 id=&#34;pre-requisite-enable-pci-devices&#34;&gt;Pre-requisite Enable PCI devices&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a harvester cluster in bare metal mode. Ensure one of the nodes has NIC separate from the management NIC&lt;/li&gt;&#xA;&lt;li&gt;Go to the management interface of the new cluster&lt;/li&gt;&#xA;&lt;li&gt;Go to Advanced -&amp;gt; PCI Devices&lt;/li&gt;&#xA;&lt;li&gt;Validate that the PCI devices aren&amp;rsquo;t enabled&lt;/li&gt;&#xA;&lt;li&gt;Click the link to enable PCI devices&lt;/li&gt;&#xA;&lt;li&gt;Enable PCI devices in the linked addon page&lt;/li&gt;&#xA;&lt;li&gt;Wait for the status to change to Deploy successful&lt;/li&gt;&#xA;&lt;li&gt;Navigate to the PCI devices page&lt;/li&gt;&#xA;&lt;li&gt;Validate that the PCI devices page is populated/populating with PCI devices&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;case-1-pci-nic-passthrough&#34;&gt;Case 1 (PCI NIC passthrough)&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a harvester cluster in bare metal mode. Ensure one of the nodes has NIC separate from the management NIC&lt;/li&gt;&#xA;&lt;li&gt;Go to the management interface of the new cluster&lt;/li&gt;&#xA;&lt;li&gt;Go to Advanced -&amp;gt; PCI Devices&lt;/li&gt;&#xA;&lt;li&gt;Check the box representing the PCI NIC device (identify it by the Description or the VendorId/DeviceId combination)&lt;/li&gt;&#xA;&lt;li&gt;Click Enable Passthrough&lt;/li&gt;&#xA;&lt;li&gt;When the NIC device is in an Enabled state, create a VM&lt;/li&gt;&#xA;&lt;li&gt;After creating the VM, edit the Config&lt;/li&gt;&#xA;&lt;li&gt;In the &amp;ldquo;PCI Devices&amp;rdquo; section, click the &amp;ldquo;Available PCI Devices&amp;rdquo; dropdown&lt;/li&gt;&#xA;&lt;li&gt;Select the PCI NIC device that has been enabled for passthrough&lt;/li&gt;&#xA;&lt;li&gt;Click Save&lt;/li&gt;&#xA;&lt;li&gt;Start the VM&lt;/li&gt;&#xA;&lt;li&gt;Once the VM is booted, run &lt;code&gt;lspci&lt;/code&gt; at the command line (make sure the VM has the &lt;code&gt;pciutils&lt;/code&gt; package) and verify that the PCI NIC device shows up&lt;/li&gt;&#xA;&lt;li&gt;(Optional) Install the driver for your PCI NIC device (if it hasn&amp;rsquo;t been autoloaded)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;case-1-dependencies&#34;&gt;Case 1 dependencies:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;PCI NIC separate from management network&lt;/li&gt;&#xA;&lt;li&gt;Enable PCI devices&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;case-2-gpu-passthrough&#34;&gt;Case 2 (GPU passthrough)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;case-2-1-add-gpu&#34;&gt;Case 2-1 Add GPU&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a harvester cluster in bare metal mode. Ensure one of the nodes has a GPU separate from the management NIC&lt;/li&gt;&#xA;&lt;li&gt;Go to the management interface of the new cluster&lt;/li&gt;&#xA;&lt;li&gt;Go to Advanced -&amp;gt; PCI Devices&lt;/li&gt;&#xA;&lt;li&gt;Check the box representing the GPU device (identify it by the Description or the VendorId/DeviceId combination)&lt;/li&gt;&#xA;&lt;li&gt;Click Enable Passthrough&lt;/li&gt;&#xA;&lt;li&gt;When the GPU device is in an Enabled state, create a VM&lt;/li&gt;&#xA;&lt;li&gt;After creating the VM, edit the Config&lt;/li&gt;&#xA;&lt;li&gt;In the &amp;ldquo;PCI Devices&amp;rdquo; section, click the &amp;ldquo;Available PCI Devices&amp;rdquo; dropdown&lt;/li&gt;&#xA;&lt;li&gt;Select the GPU device that has been enabled for passthrough&lt;/li&gt;&#xA;&lt;li&gt;Click Save&lt;/li&gt;&#xA;&lt;li&gt;Start the VM&lt;/li&gt;&#xA;&lt;li&gt;Once the VM is booted, run &lt;code&gt;lspci&lt;/code&gt; at the command line (make sure the VM has the &lt;code&gt;pciutils&lt;/code&gt; package) and verify that the GPU device shows up&lt;/li&gt;&#xA;&lt;li&gt;Install the driver for your GPU device&#xA;&lt;ol&gt;&#xA;&lt;li&gt;if the device is from NVIDIA: (this is for ubuntu, but the opensuse installation instructions are &lt;a href=&#34;https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#suse-installation&#34;&gt;here&lt;/a&gt;)&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget https://developer.download.nvidia.com/compute/cuda/repos/wsl-ubuntu/x86_64/cuda-keyring_1.1-1_all.deb&#xA;sudo dpkg -i cuda-keyring_1.1-1_all.deb&#xA;sudo apt-get update&#xA;sudo apt-get -y install cuda nvidia-cuda-toolkit build-essential&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;&#xA;&lt;li&gt;Check out &lt;a href=&#34;https://github.com/nvidia/cuda-samples&#34;&gt;https://github.com/nvidia/cuda-samples&lt;/a&gt;&#xA;&lt;code&gt;git clone https://github.com/nvidia/cuda-samples&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;cd cuda-samples/Samples/3_CUDA_Features/cudaTensorCoreGemm&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;If you need to install the drivers for the nvidia card you can use the following&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;sudo apt-get -y install ubuntu-drivers-common &amp;amp;&amp;amp; sudo ubuntu-drivers autoinstall&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;If that doesn&amp;rsquo;t work you might check for drivers that are available with &lt;code&gt;ubuntu-drivers-common&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Run &lt;code&gt;./cudaTensorCoreGemm&lt;/code&gt; and verify that the program completed correctly&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;if the device is from AMD/ATI, install and use the &lt;code&gt;aticonfig&lt;/code&gt; command to inspect the device&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;case-2-2-negative-add-gpu&#34;&gt;Case 2-2 Negative add GPU&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Pre-requisite&lt;/strong&gt;: the GPU should already be assigned to another VM&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;On the VM that doesn&amp;rsquo;t have the GPU assigned edit the VM&lt;/li&gt;&#xA;&lt;li&gt;Open up the &lt;code&gt;PCI Devices&lt;/code&gt; Section&lt;/li&gt;&#xA;&lt;li&gt;Verify that you can&amp;rsquo;t add the already assigned GPU to the VM. It should be greyed out.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;case-2-3-remove-gpu&#34;&gt;Case 2-3 Remove GPU&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Edit the VM where the GPU is assigned&lt;/li&gt;&#xA;&lt;li&gt;In the &amp;ldquo;PCI Devices&amp;rdquo; section, Clear the available devices&lt;/li&gt;&#xA;&lt;li&gt;Click save&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If the VM is on then you will be prompted to reboot.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Validate that the GPU is removed by using &lt;code&gt;lspci&lt;/code&gt; and trying to run &lt;code&gt;dmmaTensorCoreGemm&lt;/code&gt; if the GPU supported CUDA&lt;/li&gt;&#xA;&lt;li&gt;Open up another VM and verify that the GPU is listed as available in the &lt;code&gt;PCI Devices&lt;/code&gt; section&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>vGPU/SR-IOV GPU</title>
      <link>https://harvester.github.io/tests/manual/advanced/addons/2764-vgpu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://harvester.github.io/tests/manual/advanced/addons/2764-vgpu/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Related issues: &lt;a href=&#34;https://github.com/harvester/harvester/issues/2764&#34;&gt;#1661&lt;/a&gt; vGPU Support&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;pre-requisite-enable-pci-devices&#34;&gt;Pre-requisite Enable PCI devices&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a harvester cluster in bare metal mode. Ensure one of the nodes has NIC separate from the management NIC&lt;/li&gt;&#xA;&lt;li&gt;Go to the management interface of the new cluster&lt;/li&gt;&#xA;&lt;li&gt;Go to Advanced -&amp;gt; PCI Devices&lt;/li&gt;&#xA;&lt;li&gt;Validate that the PCI devices aren&amp;rsquo;t enabled&lt;/li&gt;&#xA;&lt;li&gt;Click the link to enable PCI devices&lt;/li&gt;&#xA;&lt;li&gt;Enable PCI devices in the linked addon page&lt;/li&gt;&#xA;&lt;li&gt;Wait for the status to change to &lt;code&gt;Deploy Successful&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Navigate to the PCI devices page&lt;/li&gt;&#xA;&lt;li&gt;Validate that the PCI devices page is populated/populating with PCI devices&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;pre-requisite-enable-vgpu&#34;&gt;Pre-requisite Enable vGPU&lt;/h1&gt;&#xA;&lt;p&gt;This can only be ran on a bare metal Harvester cluster that has an Nvidia card that support vGPU. You will also need the Nvidia KVM driver and the Nvidia grid installer. These can be downloaded from Nvidia through your partner portal as outlined &lt;a href=&#34;https://www.nvidia.com/en-us/drivers/vgpu-software-driver/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>VM import with EFI mode and secure boot</title>
      <link>https://harvester.github.io/tests/manual/advanced/addons/5846-vm-import-enhancement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://harvester.github.io/tests/manual/advanced/addons/5846-vm-import-enhancement/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Related issues: &lt;a href=&#34;https://github.com/harvester/harvester/issues/5846&#34;&gt;#5846&lt;/a&gt; [ENHANCEMENT] vm-import-controller enhancements&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;category&#34;&gt;Category:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Virtual Machine&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;openstack-prerequisite-setup&#34;&gt;OpenStack Prerequisite Setup&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Prepare a baremetal or virtual machine to host the OpenStack service&lt;/li&gt;&#xA;&lt;li&gt;Or use the automated Jenkins pipeline to prepare a devstack cluster (Openstack 16.2) (stable/train)&lt;/li&gt;&#xA;&lt;li&gt;Install OpenStack command line tool on your local machine (introduce in next section)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;vmware-vsphere-prerequisite-setup&#34;&gt;VMware vSphere Prerequisite Setup&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Get the available access to the existing or prepared vSphere client (v7.1)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;harvester-prerequisite-setup&#34;&gt;Harvester Prerequisite Setup&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Harvester can connect to the OpenStack dashboard and API endpoint&lt;/li&gt;&#xA;&lt;li&gt;Harvester can connect to the vSphere client dashboard and API endpoint&lt;/li&gt;&#xA;&lt;li&gt;Enable the &lt;code&gt;vm-import-controller&lt;/code&gt; in the &lt;code&gt;Addons&lt;/code&gt; page&lt;/li&gt;&#xA;&lt;li&gt;Create the &lt;code&gt;vlan1&lt;/code&gt; vm network on the &lt;code&gt;mgmt&lt;/code&gt; interface&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;install-openstack-command-line-tool&#34;&gt;Install OpenStack command line tool&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Require python 3.10 or you can use virtual environment (venv)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;virtualenv venv --python=python3.10&#xA;source venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;&#xA;&lt;li&gt;Install OpenStack client&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pip install python-openstackclient&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;&#xA;&lt;li&gt;Download the OpenStack cloud.yaml file&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Access the openstack dashboard&lt;/li&gt;&#xA;&lt;li&gt;Open &lt;code&gt;API Access&lt;/code&gt; page&lt;/li&gt;&#xA;&lt;li&gt;Click the &lt;code&gt;Download OpenStack RC File&lt;/code&gt; button&lt;/li&gt;&#xA;&lt;li&gt;Select the &lt;code&gt;OpenStack cloud.yaml File&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Copy the cloud.yaml file to your openstack config folder&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mkdir -p ~/.config/openstack&#xA;cp -v ~/Documents/Harvester/Openstack/clouds.yaml ~/.config/openstack&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;&#xA;&lt;li&gt;Check can list the image list on OpenStack Server&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openstack image list --os-auth-url &amp;lt;openstack URL&amp;gt;/identity --os-identity-api-version 3 --os-project-name admin --os-project-domain-name default --os-username &amp;lt;username&amp;gt; --os-password &amp;lt;password&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;vmwaresource-verification-steps&#34;&gt;VmwareSource Verification Steps&lt;/h2&gt;&#xA;&lt;h3 id=&#34;setup-vmwaresource-secret-and-object&#34;&gt;Setup VmwareSource secret and object&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Access Harvester node and change to root&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
